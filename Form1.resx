<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FAASExYADhMYABQUEwAUFBQAFBQVABATGwAcGgAAFRUUABcVFQAWFhIAMBkAABYWFgAZFxMAFxYZABkX
        FwBDGgAAFxgXAB0ZFAAYGRkAHRoUABkZGQBFHAAAGxoWABoaFwBMHAAAGRocABQcIAAAGTEAHx0bABke
        HQAgHxoATiMAABsfIABTIwAAIiAcABkgIABQJwAAKSQeAFIpAABSKgAAIiUkAFIrAAAkJSQAUiwAAAAh
        RAAjJyUAVy8AAFkwAAAAKEgAUDYEAC4xKAAyMCwAVTQXABknWwBNOBQAWEENAFREKQAmPVgAfFkAAClK
        ZAA4S2QAFlFzADdSaAA+U2kAQVNqAEFTawBjWlIARFdtAGhiWABCX3YAf2hGACJggwArbIoAn3hQAKF3
        XACUfFEAOnOQAFB1jABpeIMAZ3mHAFF7kwBwf4gAVX6WAEqDlwCqiGYAW4KYAF2CmACPh4EAaIWaAH6H
        kwBviJoAi4uRAJmPiQCJkZEAmpOJAISRnABrlKoAnpuYAJ+dmwB7mbcAmaOiAKeloACpp6AAyq6CAJqn
        sACmqqMAlaezAJuluQDNtI0Am627ALCwrwDbuIoAsrKzANO7lwDVvpoAprfDANW/mwDWv5wA18ChAKa4
        zQCuvMQA2MOmAKi70wDdxasAqb/VANnHsQDUyboA38y1AMrK0ADs1LEAuc3cAMvP0wDE0dEA5dW8ANnT
        zQDc2NEAwtfkAMna5QDc3NoA8eDMANvd3wDL3OgAy9zpAMzd6QDZ3uQA3t/iAMve9ADr5NwA5uTiAOXm
        5ADu6N8A1OfyAPvt2gD/8NcA2e35AP/z2wDU7f8A3fH7AO7y9QDt8fkA/fTqAP/73gD39vYA3vb/AP/5
        6gD2+fgA//7oAOT7/wD//u0A//z1APv7+gD//+0A+/v+AP//8AD///EA///zAP/9+gD///YA///5AP//
        +gDx//8A///7AP///AD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycn
        JycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycn
        JycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJTQ0NDQzIicnJycnJycnJycl
        NDQ0NDQiJycnJycnJyUxAAAAAAI7IicnJycnJycnJTEAAAAAAEcnJycnJycnOhIAAAAAADAqJycnJycn
        Jyc6EQAAAAAAIycnJycnJzQAVuDu7u6/ACkqJycnJycnNABY7u7u7sAAJyI5Ly8vQgBl7u63waEAQDY0
        KyIfNDRCACi9usruzgAhVQAAAAAAAGLq7mMAAGoAAAAcPGQAAABcGAAAnu7FAEMEAJWlp5sTXeruegBF
        AG2ZlA09AHuchQBEPgCs7sYAFACt7u7u7htb6u53AFQAsO7ufgAA0u7uDxA3AKnuxgAAAubujwAAAGLq
        7ncAAAPk4+6kAGjs1u6XAFAAqe7GAAAI5e6HAAAAYurudwAAfe6iwtMAge6Q7skADgCp7sYAAAXf7owA
        SwBi6u53AACy7n+m7gC47gDd7mcAAKnuxgAABt/ujQBJAGLq7ncAAOjuF4DubNjaALzumgAAqe7GAAAA
        4u6JAAEAYurueACC7t4Abu676q4Ai+7UAACp7sYAAADb7oQAGQBi6u52ALbuswAAz+7uigBr7u50AKnu
        xgBx7u7h7u7rAF7q7nIL7u6RAAC07u4VAADQ7rEAqe7GAEGO1+6fk5YAXurudQegklIKAG+YiABaAHmd
        hgCr7sYAAADp7oMAAABi6u5zAAAACVFZAAAAUx1fAAAAAKjuxgAACLXHfABLAGDq7nAAAE01IiE0NDQi
        Jx9ODAAAo+7EAD84AAAAVzIAZu7u2e65ACwnJycnJycnNABP7e7n7tEAIickJS8iNABGvsjL3KoALicn
        JycnJyc0AEzN1cPMrwAnJycnJyciShYAAAAAAGEgJycnJycnJyJIGgAAAAAAaScnJycnJyciLTQ0NDQ0
        HycnJycnJycnJyImNDQ0NDQeJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycn
        JycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycn
        JycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycn
        JycnJycnJycnJycnJycnJycnJycnJycnJycnJycnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>